//! Powerful schema builder API in Rust, using Diesel in the backend.
//! 
//! Barrel has two primary models, the schema and the table. A schema is built
//! with a variety of hooks that can be executed on tables, using static callbacks.
//! 
//! ```
//! let mut s = Schema::name("public").create_table("users", |t| {
//!     t.increments();
//! });
//! ```
//! 
//! The above code, for example, will create a new table in the "public" schema, called "users"
//! and then execute the table hook on it when invoking `schema.exec()`. The hook creates an
//! auto-incrementing primary intex. By default the name "id" is assumed.
//! 
//! Barrel is designed to give you ease of use as well as power over how you write your 
//! migrations and SQL schemas. See the `examples` folder for more details ðŸŒˆ

mod table;
pub use table::*;

mod schema;
pub use schema::*;

// â€“ dropColumn
// â€“ dropColumns
// â€“ renameColumn
// â€“ increments
// â€“ integer
// â€“ bigInteger
// â€“ text
// â€“ string
// â€“ float
// â€“ decimal
// â€“ boolean
// â€“ date
// â€“ dateTime
// â€“ time
// â€“ timestamp
// â€“ timestamps
// â€“ dropTimestamps
// â€“ binary
// â€“ enum / enu
// â€“ json
// â€“ jsonb
// â€“ uuid
// â€“ comment
// â€“ engine
// â€“ charset
// â€“ collate
// â€“ inherits
// â€“ specificType
// â€“ index
// â€“ dropIndex
// â€“ unique
// â€“ foreign
// â€“ dropForeign
// â€“ dropUnique
// â€“ dropPrimary
